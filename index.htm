<html>
<head>
<meta content="width=device-width, initial-scale=1.0" name="viewport" />

<script src="//cdn.jsdelivr.net/npm/eruda"></script>
 <script>eruda.init();</script>

<script src="https://unpkg.com/@metamask/detect-provider/dist/detect-provider.min.js"></script>
	
<script src="https://c0f4f41c-2f55-4863-921b-sdk-docs.github.io/cdn/metamask-sdk.js"></script>
<script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js" type="application/javascript"></script>
</head>

<body>
                  <button class="btn btn-primary btn-lg btn-block mb-3" id="DetectProv">
                  Detect
                </button>
	
                  <button class="btn btn-primary btn-lg btn-block mb-3" id="connectMM">
                  Connect
                </button>
  
                <button class="btn btn-primary btn-lg btn-block mb-3" id="signTypedDataV3">
                  Sign
                </button>
    
<script>

 DetectProv.onclick = async () => {
	const provider = await detectEthereumProvider()
	
	if (provider) {
	
	  console.log('Ethereum successfully detected!')
	
	  // From now on, this should always be true:
	  // provider === window.ethereum
	
	  // Access the decentralized web!
	
	  // Legacy providers may only have ethereum.sendAsync
	  const chainId = await provider.request({
	    method: 'eth_chainId'
	  })
	} else {
	
	  // if the provider is not detected, detectEthereumProvider resolves to null
	  console.error('Please install MetaMask!', error)
	}

 }
	   
/*
    const MMSDK = new MetaMaskSDK.MetaMaskSDK()
    // Because init process of the MetaMaskSDK is async.
    setTimeout(() => {
        const ethereum = MMSDK.getProvider() // You can also access via window.ethereum
        const addresses =  ethereum.request({ method: 'eth_requestAccounts' })
		console.log(addresses)
    }, 0)
*/
</script>


